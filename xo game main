#include "Win10.h"  
/*хэдер (начинается с двойных кавычек) у хэдеров два типа - хэдеры находится в
"внешние зависимости" и пишутся в треугольных скобках*/
using namespace std;


/*
* Крестики-нолики
*
* 0) Главное меню
* 1) Старт игры
*		-1) Очистить консоль
*		0) Мы должны вернуть курсор на место
*		1) Рисуем поле
*		2) Ждем и обрабатываем импуты игрока
*

*/

int menuRow = 3; int menuCol = 6;  //где меню находится 
int gameRow = 3; int gameCol = 6;
int Select = 0;



// Переменные для цвета выбранного пункта меню
int colSelFon = _COLOR::bright_white;
int colSelSym = _COLOR::light_purple;
// Переменные для цвета не выбранного пункта меню
int colUnselFon = _COLOR::black;
int colUnselSym = _COLOR::bright_white;

int stdFon = _COLOR::black;
int stdSym = _COLOR::white;
//Возвращаемый тип данных Имя
int score_x= 0;
int score_o= 0;

void About()
{
	system("cls");  //чистим экран 
	SetPos(5, 8); //позиция курсора 
	cout << "Автор 1 - программа компьютерной школы \"STEP\"\n";
	SetPos(6, 8);
	cout << "Автор 2 (исполнитель) - Негмат Аружан (SEP-222.4)\n";
	system("pause");   //так как мы находимся в огромном цикле - чтобы с About не выходилось сразу и мы успели прочитать что там 
	system("cls");
}


void Init()
{
	system("cls");
	setlocale(LC_ALL, "RUS");
	system("color 07");     //базовый цвет системы (чернобело окно)

	CursorHide(FALSE, 20);  //прячим или не прячим курсор --- False-прячим, True- не прячим;  второй аргумент - размер курсора 
}

void StartGame()
{
	/*
	"+---+---+---+"
	"|   |   |   |"
	"+---+---+---+"
	"|   |   |   |"
	"+---+---+---+"
	"|   |   |   |"
	"+---+---+---+"
	*/


	// переменные для курсора в игре 
	int curRow = gameRow + 1;
	int curCol = gameCol + 2;   //устанавливаем наш курсор на первую клетку поля 
	int _row = 0, _col = 0;  //переменная для номера сетки 
	int score_row = 1; 
	int score_col = 1;
	bool isStepX = true;

	int cell[3][3] = { 0 };  //двумерный массив клеток 3х3

	int win = 0;


	system("cls");
	SetPos(score_row, score_col);
	cout << "Счет: ";
	SetPos(score_row, score_col+8);
	cout << "Крестики - " << score_x;
	SetPos(score_row, score_col+30);
	cout << "Нолики - " << score_o;
	SetPos(gameRow + 0, gameCol);
	cout << "+---+---+---+" << endl;
	SetPos(gameRow + 1, gameCol);
	cout << "|   |   |   |" << endl;
	SetPos(gameRow + 2, gameCol);
	cout << "+---+---+---+" << endl;
	SetPos(gameRow + 3, gameCol);
	cout << "|   |   |   |" << endl;
	SetPos(gameRow + 4, gameCol);
	cout << "+---+---+---+" << endl;
	SetPos(gameRow + 5, gameCol);
	cout << "|   |   |   |" << endl;
	SetPos(gameRow + 6, gameCol);
	cout << "+---+---+---+" << endl;
	CursorHide(TRUE, 100);  //возвращам курсор


	while (true)
	{
		if (win != 0)
			break;
		SetPos(curRow, curCol);
		int key = _getch();
		switch (key)
		{
		case _KEY::RIGHT:
			if (_col < 2)
			{
				if (curCol == 16)
				{
					curCol = 8;
					_col = 0;
				}
				else
				{
					
					_col++;
					curCol += 4;
				}
			}
			break;

		case _KEY::LEFT:
			if (_col > 0)
			{
				if (curCol == 8)
				{
					curCol = 16;
					_col = 0;
				}
				else
				{

					_col--;
					curCol -= 4;
				}
			}
			break;
		case _KEY::DOWN:
			if (_row < 2)
			{
				if (curRow == 8)
				{
					curRow = 4;
					_row = 0;
				}
				else
				{

					_row++;
					curRow += 2;
				}
			}
			break;
		case _KEY::UP:
			if (_row > 0)
			{
				if (curRow == 4)
				{
					curRow = 8;
					_row = 0;
				}
				else
				{

					_row--;
					curRow -= 2;
				}
			}
			break;
		case _KEY::ESC: system("cls"); return;  //return - вернутся в меню

		case _KEY::ENTER:
			if (isStepX)
			{

				if (cell[_row][_col] == 0)
				{
					cell[_row][_col] = 'x';
					cout << "X";
					isStepX = false;
				}

			}
			else
			{
				if (cell[_row][_col] == 0)
				{
					cell[_row][_col] = 'o';
					cout << "O";
					isStepX = true;
				}
			}
			if (cell[0][0] == cell[0][1] && cell[0][1] == cell[0][2])
				win = cell[0][0];
			else if (cell[1][0] == cell[1][1] && cell[1][1] == cell[1][2])
				win = cell[1][0];
			else if (cell[2][0] == cell[2][1] && cell[2][1] == cell[2][2])
				win = cell[2][0];

			if (cell[0][0] == cell[1][0] && cell[1][0] == cell[2][0])
				win = cell[0][0];
			else if (cell[0][1] == cell[1][1] && cell[1][1] == cell[2][1])
				win = cell[0][1];
			else if (cell[0][2] == cell[1][2] && cell[1][2] == cell[2][2])
				win = cell[0][2];

			else if (cell[0][0] == cell[1][1] && cell[1][1] == cell[2][2])
				win = cell[0][0];

			else if (cell[0][2] == cell[1][1] && cell[1][1] == cell[2][0])
				win = cell[0][2];

		default: break;
		}
	}
	if (win == 'x')
	{
		system("cls");
		cout << "Победил крестик\n";
		cout << "\nЕсли хотите продолжить играть то вернитесь в меню нажав Esc\n";
		score_x += 1;
	}

	if (win == 'o')
	{
		system("cls");
		cout << "Победил нолик\n";
		cout << "\nЕсли хотите продолжить играть то вернитесь в меню нажав Esc\n";
		score_o += 1;
	}
	
	system("pause");
	Init();
	/*while (true)
	{
		SetPos(curRow, curCol);
		int key = _getch();
		switch (key)
		{
		case _KEY::RIGHT:
			if (curCol == 16)
				curCol = 8;
			else
				curCol += 4;
			break;
		case _KEY::LEFT:
			if (curCol == 8)
				curCol = 16;
			else
				curCol -= 4;
			break;
		case _KEY::UP:
			if (curRow == 4)
				curRow = 8;
			else
				curRow -= 2;
			break;
		case _KEY::DOWN:
			if (curRow == 8)
				curRow = 4;
			else
				curRow += 2;
			break;

		case _KEY::ESC: system("cls"); Init(); return; //return - вернутся в меню    //Init() - чтобы курсор не бегал

		case _KEY::ENTER:
			if (isStepX)
			{
				cout << "X";
				isStepX = false;
			}
			else
			{
				cout << "O";
				isStepX = true;
			}

		default: break;
		}
	}*/

}


void GameLoop()
{
	while (true)
	{
		if (Select == 0)        // селект обозначает индекс меню (если 0 - мы будем писать подсвеченным цветом)
			SetColor(colSelFon, colSelSym);
		else
			SetColor(colUnselFon, colUnselSym);
		SetPos(menuRow + 0, menuCol);
		cout << "Начать новую игру";
		if (Select == 1)
			SetColor(colSelFon, colSelSym);
		else
			SetColor(colUnselFon, colUnselSym);
		SetPos(menuRow + 1, menuCol);
		cout << "Об авторах";
		if (Select == 2)
			SetColor(colSelFon, colSelSym);
		else
			SetColor(colUnselFon, colUnselSym);
		SetPos(menuRow + 2, menuCol);
		cout << "Выход";
		SetColor(stdFon, stdSym);   //чтобы при выходе результат программы был стандартным цветом 

		if (_kbhit())  //нажал ли на клаву (keyboardhit )
		{
			int key;
			key = _getch();   //какая именно кнопка нажата?
			// если пользователь нажал на кнопку - узнать какая эта кнопка
			// и изменить селект

			switch (key)
			{
			case _KEY::UP:
				if (Select == 0)  //если пункт самыый первый - то идет на последний 
					Select = 2;
				else
					Select--;
				break;
			case _KEY::DOWN:
				if (Select == 2)
					Select = 0;
				else
					Select++;
				break;
			case _KEY::ENTER:
				switch (Select)  //понять на какой кнопке мы находимся 
				{
				case 0: StartGame(); break;
				case 1: About(); break;
				case 2: return;  //return - выкидывает из функции   //вместо return можно использовать exit(0)  (вместо нуля можно поставить любое другое число)
				default:
					break;
				}
			default:
				break;
			}
		}
	}
}

int main() {
	Init();
	GameLoop();
	return 0;
}

/*
	 функция - способ спрятать код в отдельное место
*/
